// generated by Fast Light User Interface Designer (fluid) version 1.0400

#ifndef camera_menu_h
#define camera_menu_h
#include <FL/Fl.H>
#include <FL/Fl_Double_Window.H>
#include <FL/Fl_Box.H>
#include <FL/Fl_Input.H>
#include <FL/Fl_Button.H>

struct CallbackInterface
{
  virtual ~CallbackInterface() {}

  virtual void                    run(int) = 0;
  virtual void                    dir(int,const char*) = 0;
  virtual const char*             destination(int) = 0;
};


class CameraWindow {
public:
  Fl_Double_Window* make_window(CallbackInterface* ci = nullptr);
  struct Row
  {
    Row() : m_camera_script(nullptr), m_run(nullptr), m_Browse(nullptr) {}
    Fl_Input *m_camera_script;
    Fl_Button *m_run;
    Fl_Button *m_Browse;

    void      enable(bool);
  }      	 						            m_row[3];
  Fl_Button*				              m_close;
  Fl_Double_Window*               m_window;

private:
         void                     cb_m_run(Fl_Button*, void*, size_t);
         void                     cb_m_Browse(Fl_Button*, void*, size_t);

  static void cb_m_run1(Fl_Button*, void*);
  static void cb_m_run2(Fl_Button*, void*);
  static void cb_m_run3(Fl_Button*, void*);

  static void cb_m_Browse1(Fl_Button*, void*);
  static void cb_m_Browse2(Fl_Button*, void*);
  static void cb_m_Browse3(Fl_Button*, void*);
  
  inline void cb_m_close_i(Fl_Button*, void*);
  static void cb_m_close(Fl_Button*, void*);
  
private:
  CallbackInterface*              _callback;
};
#endif
